---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Welcome to Astro.">
  <div class="out-wrapper">
    <section class="form">
      <p class="section-title">課題一覧</p>
      <div class="form-list">
        <input
          type="text"
          id="add_text"
          placeholder="課題を入力"
          autocomplete="off"
          class="todo"
          value=""
        />
        <div class="flex">
          <input type="date" id="add_date" class="date" value="" />
          <input type="button" id="add_button" value="追加" class="add" />
        </div>
      </div>
    </section>

    <ul class="todo-list">
      <li class="section-title">
        <p class="todo">課題</p>
        <p class="date">期限</p>
        <p class="remove-first"></p>
      </li>
      <!-- <li class="red">
        <p class="todo">誕生日</p>
        <p class="date">12月12日</p>
        <input class="remove" type="button" value="削除" />
      </li> -->
    </ul>
  </div>
</Layout>

<style>
  html {
    font-size: 100%;
  }

  body {
    background-color: #586365;
  }

  img {
    width: 100%;
  }

  * {
    margin: 0;
    padding: 0;
  }

  .out-wrapper {
    max-width: 600px;
    min-height: 85vh;
    margin: 2% auto;
    padding: 10px;
    background-color: #fff;
    border: solid 7px #ffc042;
    border-radius: 20px;
  }

  /* form
--------------- */
  .form .section-title {
    font-size: 2rem;
    text-align: center;
    font-weight: bolder;
    margin: 20px;
  }

  .form input {
    display: block;
    font-size: 15px;
    padding: 6px 10px;
    border: solid 2px #586365;
    border-radius: 10px;
  }

  .form .form-list {
    display: flex;
    justify-content: space-between;
    margin-bottom: 12px;
  }

  .form .form-list .todo {
    width: 55%;
    box-sizing: border-box;
  }

  .form .form-list .flex {
    display: flex;
    justify-content: space-between;
    width: 44%;
    box-sizing: border-box;
  }

  .form .form-list .date {
    width: 49%;
    box-sizing: border-box;
  }

  .form .form-list .add {
    width: 49%;
    box-sizing: border-box;
  }

  .form .form-list .add:hover {
    opacity: 0.7;
  }

  .form .form-list .add:active {
    color: #fff;
    background-color: #4dc0b2;
  }

  /* todo-list
--------------- */
  .todo-list {
    list-style: none;
  }

  .todo-list li {
    display: flex;
    border-bottom: solid 3px #a9a9a9;
  }

  .todo-list .section-title {
    font-weight: bold;
  }

  .todo-list li .todo {
    width: 58%;
    /* これ気持ち悪い 見た目が悪くなる */
    /* white-space: nowrap;
  overflow: scroll;
  overflow-y: hidden; */
    padding: 10px 5px;
  }

  .todo-list li .date {
    width: 25%;
    padding: 10px 5px;
  }

  .todo-list li .remove-first {
    width: 15%;
    margin: 10px 5px;
  }

  .todo-list li .remove {
    width: 15%;
    margin: 10px 5px;
    display: block;
    border: solid 2px #586365;
    border-radius: 5px;
  }

  .todo-list li .remove:hover {
    opacity: 0.7;
  }

  .todo-list li .remove:active {
    color: #fff;
    background-color: #fd7575;
  }

  /* 色変更 */
  .todo-list .red {
    background-color: #ffcdcd;
  }

  .todo-list .yellow {
    background-color: #fffecd;
  }

  .todo-list .out {
    background-color: #dedede;
  }

  /*  */
  @media (max-width: 601px) {
    /* common
  ---------------- */
    .out-wrapper {
      margin: 2%;
    }

    /* form
  ---------------- */
    .form .form-list {
      display: block;
      justify-content: none;
    }

    .form .form-list .todo {
      height: 40px;
      margin-bottom: 8px;
      width: 100%;
      box-sizing: border-box;
    }

    .form .form-list .flex {
      display: flex;
      justify-content: space-between;
      width: 100%;
      box-sizing: border-box;
    }

    .form .form-list .date {
      width: 59%;
      box-sizing: border-box;
    }

    .form .form-list .add {
      width: 39%;
      box-sizing: border-box;
    }
  }
</style>

<script>
  // onload:全てのhtml要素の読み込みが完了したら
  window.onload = function () {
    const add_button = document.getElementById("add_button");
    add_button.addEventListener("click", function () {
      add_click();
    });

    // ローカルストレージの内容確認
    const todos = JSON.parse(localStorage.getItem("todos"));
    if (todos) {
      for (const todos_list of todos) {
        add_click(todos_list);
      }
    }
  };

  function add_click(todos_list?) {
    // const add_todo = document.getElementById("add_text");
    // const add_date = document.getElementById("add_date");
    const todo_ul = document.querySelector("ul");

    const add_todo = document.getElementById(
      "add_text",
    ) as HTMLInputElement | null;
    const add_date = document.getElementById(
      "add_date",
    ) as HTMLInputElement | null;

    let todo_text = add_todo.value;
    let date_text = add_date.value;

    if (todos_list) {
      todo_text = todos_list.todo_save;

      if (todos_list.date_save) {
        date_text = todos_list.date_save;
      }
    }

    if (todo_text) {
      //   html要素の作成(li)
      const todo_li = document.createElement("li");
      todo_li.classList.add("li-lists");

      // 　課題の作成
      const todo = document.createElement("p");
      todo.classList.add("todo");
      todo.textContent = todo_text;

      //   期限の作成
      const date = document.createElement("p");
      date.classList.add("date");
      date.setAttribute("data-value", "");
      if (date_text) {
        date.setAttribute("data-value", date_text);
        const dateString = date_text;
        const date_date = new Date(dateString);
        const month = date_date.getMonth() + 1;
        const day = date_date.getDate();
        date.textContent = `${month}月${day}日`;

        //   期限の色設定
        let today = new Date();
        let term = (Number(date_date) - Number(today)) / 86400000;
        if (term < 0) {
          todo_li.classList.add("out");
        } else if (term < 1) {
          todo_li.classList.add("red");
        } else if (term < 3) {
          todo_li.classList.add("yellow");
        }
      }

      //   削除ボタンの作成
      const remove = document.createElement("input");
      remove.setAttribute("type", "button");
      remove.value = "削除";
      remove.addEventListener("click", function (event) {
        event.preventDefault();
        todo_li.remove();
        save_date();
      });
      remove.classList.add("remove");

      todo_li.appendChild(todo);
      todo_li.appendChild(date);
      todo_li.appendChild(remove);
      todo_ul.appendChild(todo_li);

      save_date();

      // todo&dateのリセット
      add_todo.value = "";
      add_date.value = "";

      // if (add_todo instanceof HTMLInputElement && add_todo !== null) {
      //   add_todo.value = "";
      // }

      // if (add_date instanceof HTMLInputElement && add_date !== null) {
      //   add_date.value = "";
      // }
    }
  }

  function save_date() {
    const li_list = document.querySelectorAll(".li-lists");
    const todos = [];

    for (const li_lists of li_list) {
      const todo_list = li_lists.querySelector(".todo");
      const date_list = li_lists.querySelector(".date");
      const date_Value = date_list.getAttribute("data-value");

      todos.push({
        todo_save: todo_list.textContent,
        date_save: date_Value,
      });
    }

    localStorage.setItem("todos", JSON.stringify(todos));
  }
</script>
